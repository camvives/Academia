<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADaCAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAACKFJ
        REFUeNrtnV9sXmUdxz99277t2PBqA4TBoBKIBrIZEsS4JWIwQWOCGmmNruWGXXinXrC1W0e7rtvYjfHC
        mBhZYruE4KYmXiiJGIxCjBcSEiaJxs117A8CidFlc2v7vq8XY7J257Sn5233Puc8n09v1rdvs9Pn+3l+
        7znPec7ztNEquniCb/EQNyPLy0Xe5BAvcD7Lm9tbdJAdPMVBHqDLvJadTtazmTqvMxOuABv5HhvMasVY
        xcd5g78v/sZKiw5wCz2mtKLcxufoDFeA9XSY0YrSlq2NWyWA8a887VnSrZS/HUQBJJVwSvGFbNetksJq
        1tBWXAEa/IofZblulUQqfI1tWc76wxXgbV6hZpK52UQjnzmh0NayQalyVIC2vL8okZsjCiAKIAogCiAK
        IAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAK
        IAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAqwfLRF9ddmIp5t3NfxSXqY5i8c44LB
        xybAJp7hMT5CnXO8yA84Y/QxCbCBMb70wb97+A5rGeNtw4c4zgHaeJzHrvm+m36GudPwYxGgykN0z3lF
        BSKrANXrXlOBiASY5m/UVCBeAer8mmMJr6tAJALAm+znhArEK8Asv2AXx1UgVgFgmp8xrALxCrCYArtj
        VSCmm0ELKbA1VgXiuhuoApELoALRC6AC0QuwuALrFSBmBfp5NiYFYp0TmK5AV1wKxDspVAUiF+CqAidS
        FbhDAcqvwFF2pSowEoMCsT8XMLOAAgOMcrsCxKtAlX72lF0BBYhcgXgeDFlMARjnnkQFYJhzVoDyKzDE
        PxKrwABjfFQBYlBgZ6ICnQwwxm0KUHZmOZJSBToZYLycCngOMFeBo8B+7k5UAHbyjhWg/AoMcjKxqwyw
        j1utAOVX4AhwgA2JCsAO3rUCNE/9uldqNAJpkxpH2MFUwk/aGeAAtyhA87wzT4E67zIbTKvUOMJ2TiUq
        8BTPsU4BmuU1Ts/5/jR/DKYCXFXgmUQFKgxwsFxVoBV0sYPzND74+jeDdAXYOfqY+v8xXvtV41BgClT4
        LpfnHeWLrA5ZgTU8zauc5Sx/4GnWBHmM6QrMciioK4ICCgCwlo1sZG3AR1ihj5OpCoQzNFRQAYpAugIz
        PB+MArkFcCBoMeocYXviRWFHGQaIFaA5BfoZL/adQgVoToFO+tlb5CkjCrAcCowVVwHvBSxFATjIXQkK
        bAWGOWsFKL8CyaODVbYyVsxJ5AqwfAqMFlEBBVg+BfoZLd4DZQqQT4GplCowUjQFFCCPAkdT5gt0FU8B
        BcjDlSkjJ1MUKNSTxQqQX4HBFAX6GSnOQjMKkF+BowwmTiK/UgUKooAC5Gc29WmiruIsN6UAzStwosgK
        dCzx3W68Np9fUmUsYYC4m63AntD3JsoqQBs9bOY+Vpn4dVQ5n/h6IRTIJkCFzzLEp7jJCpBI2nzmbrbS
        YDTkTeqyCXA/I2wx51TSu0U33+QMz3Ep1EOvZHrP4zxsyjm5ia9yb7iHl0WATh4McNZ+cbgr4RSxUAIQ
        1DM7csMFmOEYl22q3Ewl3jgqkAB1XuJP5piTi/w8cUHaQMh2FfBXRhjiEVY5cphII7VdLnGYH4d7DZBV
        gDq/4xSf4X4HghKo8iifSIl/kr1hTxbNOhLY4DjHHQpOoJM+nkjt/cFvU7+0ewHhLOEQTvt9OWWPkUsc
        Dv9OgHcDm42/j30Ja4oVJn4FaDb+8YTFpOByUeL3yaCViX+S0XlL4ChACePflzjEW6j4/QjIRzu95Yjf
        CpAv/j4OJE73Klz8CrB0KqnxTzPJSMiTP5L/HFlae329TPFbAZYz/t1FXCHAChB1/FaA7KSf+s0UN34F
        WI74J4q8qZQfAVHHbwVoLv5ZJtlV7G1krACLt1B6/BPF30WotRVgHbcDZ3g/4PjTzvxrTDDEP+0heVnD
        Nl7jLGd5lW3BLhf/DU6lrBX+fFA7BhRutfAuBudsGDEU5IYR6fG7YUSTfHpe054M7tnD9tT4axwKbteg
        wi0Xv3neoop38EhQE07Tz/xr/ITtvBdu31qqOa3h1nn/c4VbArok7Vgg/okyxd86ASoJfS6UCtBBH/tT
        e/+OMsXvQFBy/MmzfWaZYLBc+4Y6EJQU/3hq/ENli98KMJdOelNm+s4wyc4yDvtYAbLFX4JBXwVYPP69
        qfEPlzN+PwLmxn93wk+mmSz2DV8FWJwqTy4Q/+7yxu9HwNX4xxaIv6CTvRRgKfHfE2f8CpAe/2UmeLbs
        8ccuQJXe1PgL+ZiHAiy19+9JjT/oFX4VYOXjL9Qjngqw9Ph72UNP7PHHOg5Q5UlGE+O/xOGY4o+zAlwp
        /mnx74kp/hgFWCz+QiztpADGrwC54u81/ngFWPjUL8r4Y7oKWKj4T4a/pq8CNB9/8qBv1PHH8hHQwVeM
        P2YBHmTQ+OMVoMIXeMD44xWgyn20G3+8AjSYNv6YBZjmz/O2bTL+yCrAS7x8zff/Nf4PiWMcYIph/sPn
        uZkG53iBH8Yx20cBPuQNvs0mPsZl3uIYFww+NgHgPX7Dy+6CPJ+47gYaf+QCiAKIAogCiAKIAogCKIBN
        oACiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIA
        ogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiABKxAA1qxpGbet49EUPZObSNO3mUGZPM3ZHv
        pa3YAnyRLebYBKvzZRnO3sGrWW2KNx5PAhVAFODGM2vTrzg16uEKcFoFVpgGp7NcVbVKgN9z3IxWlHP8
        Nksna2/R4b3PBR5mjTmtEP/i+/w0SwVolQB13uIEa1lLl2ktMxd5nYMc4kKWN/8PBdbEugXGHEUAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>